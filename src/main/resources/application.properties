# 应用名称
spring.application.name=
# 应用服务 WEB 访问端口
server.port=8080
#访问路径
server.servlet.context-path=/

#undertow 配置
# Undertow 日志存放目录
server.undertow.accesslog.dir=
# 是否启动日志
server.undertow.accesslog.enabled=false 
# 日志格式
server.undertow.accesslog.pattern=common
# 日志文件名前缀
server.undertow.accesslog.prefix=access_log
# 日志文件名后缀
server.undertow.accesslog.suffix=log
# HTTP POST请求最大的大小
server.undertow.max-http-post-size=0
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
server.undertow.threads.worker=20
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
#server.undertow.buffers-per-region=1024
# 是否分配的直接内存
server.undertow.direct-buffers=true
#默认数据库名称
gzb.db.thisDataBaseName=gzb_system


#redis 配置信息
#密码
gzb.redis.01.pwd=ASHaxf129736#$_*?.
#
gzb.redis.01.ip=127.0.0.1
#
gzb.redis.01.port=6379
#
gzb.redis.01.threadMax=24
#
gzb.redis.01.freeThreadMax=10

# false 不打印只记录到文件， true 打印出来且记录到文件  注：打印出来 影响性能哈
gzb.log.showLog=true
#redis map  msql 三种session类型 自选
gzb.session.type=redis
#单位 秒 session 失效时间 gzb.tools.session.Session
gzb.session.useTime=3600000
#open no
gzb.httpsession=no
#redis map  msql 三种 cache 类型 自选
gzb.cache.type=redis
#groovy 类 加载方式 file 从磁盘目录  http 从网络 no 关闭
gzb.groovy.load.type=file
# gzb.groovy.load.type 为 file 此条有效 webApi 源码目录位置，子文件夹也可以扫描
gzb.groovy.api.folder=E:/codes_20220814/java/frame/src/main/java/gzb/api

#设备编号用来生成 数据库 bigint id
gzb.devName=100
#静态资源路径 不支持 classpath 之类的 不是不能只是我不喜欢
gzb.static.path=E:/codes_20220814/java/frame/src/main/resources/templates
#登录界面地址 自带ui
gzb.system.login.page=login.html
#图片上传 最终保存目录路径
gzb.upload.path=C:/upload

#限流配置 对api进行流量限制 0未启用 大于0为最大并发数量 注：不等同于qps 主要是防止服务器崩溃
gzb.flow.api.max=0
#限流配置 对静态资源进行流量限制 0未启用 大于0为最大并发数量 注：不等同于qps 主要是防止服务器崩溃
gzb.flow.static.max=0
#异步sql时 批量提交数量
gzb.db.asy.batch.num=10000
#异步sql时 线程沉睡时间 毫秒
gzb.db.asy.sleep.hm=1000

#json字段名称 定义
gzb.json.code=code
gzb.json.state=state
gzb.json.message=message
gzb.json.jump=jump
gzb.json.data=data
gzb.json.page=page
gzb.json.limit=limit
gzb.json.count=count
gzb.json.next=next
gzb.json.entity.data=data

#数据库相关
#gzb_system mysql5.7
gzb.db.gzb_system.url=jdbc:mysql://127.0.0.1:3306/gzb_system?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&rewriteBatchedStatements=true
#驱动
gzb.db.gzb_system.class=com.mysql.jdbc.Driver
#密码
gzb.db.gzb_system.pwd=root
#账号
gzb.db.gzb_system.acc=root
#自动提交
gzb.db.gzb_system.auto=true
#连接数量
gzb.db.gzb_system.threadMax=24
#超时时间
gzb.db.gzb_system.overtime=3000

#pay_system
gzb.db.pay_system.url=jdbc:mysql://127.0.0.1:3306/pay_system?autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&rewriteBatchedStatements=true
#驱动
gzb.db.pay_system.class=com.mysql.jdbc.Driver
#密码
gzb.db.pay_system.pwd=root
#账号
gzb.db.pay_system.acc=root
#自动提交
gzb.db.pay_system.auto=true
#连接数量
gzb.db.pay_system.threadMax=24
#超时时间
gzb.db.pay_system.overtime=3000

#数据库表gzb_cache 开启分表  0不开  1按年 2按月 3按日  没卵用
gzb.db.gzb_system.division.gzb_cache=0

#生成逆向工程的数据库名称
gzb.frame.auto.db.name=gzb_system
#生成逆向工程的表名称格式为：name/name2/name3  生成全部表 为：*
gzb.frame.auto.table.name=*
#生成逆向工程的命名方式 1为 以数据库内名称为准 2驼峰 默认2
gzb.frame.auto.type=2
#生成逆向工程的类型 1basedao  2每个表生成dao
gzb.frame.auto.base.dao=1



